"""
Django settings for findmyfund project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from common.init_helpers import is_internal_ip
from pathlib import Path
from decouple import config

BASE_DIR = Path(__file__).resolve().parent.parent

from .logging_config import *  # noqa: F403, F401

# Build paths inside the project like this: BASE_DIR / 'subdir'.


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", cast=bool)
ALLOWED_HOSTS = config("ALLOWED_HOSTS", cast=lambda v: [
                       s.strip() for s in v.split(",")], default=[])
INTERNAL_IPS = config("INTERNAL_IPS", cast=lambda v: [
                      s.strip() for s in v.split(",")], default=[])
ALLOW_CORS = config("ALLOW_CORS", cast=bool, default=False) and DEBUG
CACHE_ENABLED = config("CACHE_ENABLED", cast=bool, default=False)
API_CACHE_ENABLED = config(
    "API_CACHE_ENABLED", cast=bool, default=CACHE_ENABLED)
USE_POSTGRESQL = config("USE_POSTGRES", cast=bool)
ENABLE_THROTTLING = config("ENABLE_THROTTLING", cast=bool, default=True)
ENABLE_DJDT = config("ENABLE_DJDT", cast=bool, default=False)


# Application definition

INIT_INSTALLED_APPS = []
INIT_MIDDLEWARES = []


INIT_INSTALLED_APPS += [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

# custom apps
INIT_INSTALLED_APPS += [
    "custom_auth.apps.CustomAuthConfig",
    "funds.apps.FundsConfig",
]

# 3rd party apps
INIT_INSTALLED_APPS += [
    "import_export",
    "rest_framework",
]


if ENABLE_DJDT:
    INIT_INSTALLED_APPS += [
        "debug_toolbar",
    ]
    INIT_MIDDLEWARES.append("debug_toolbar.middleware.DebugToolbarMiddleware")

    def show_toolbar(request):
        return is_internal_ip(request, INTERNAL_IPS, DEBUG)

    DEBUG_TOOLBAR_CONFIG = {
        "SHOW_TOOLBAR_CALLBACK": show_toolbar,
        "RESULTS_CACHE_SIZE": 100,
    }

INSTALLED_APPS = INIT_INSTALLED_APPS


if ALLOW_CORS:
    CORS_ALLOW_ALL_ORIGINS = True
    INIT_INSTALLED_APPS.append("corsheaders")
    INIT_MIDDLEWARES += ["corsheaders.middleware.CorsMiddleware"]
    CORS_ALLOW_HEADERS = [
        "x-api-key",
        "HTTP_X_API_KEY",
        "options",
        "OPTIONS",
        "content-type",
        "authorization",
    ]


MIDDLEWARE = INIT_MIDDLEWARES + [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


ROOT_URLCONF = "findmyfund.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "findmyfund.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
DATABASES = (
    {
        "defaut": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": config("DB_NAME"),
            "USER": config("DB_USER"),
            "PASSWORD": config("DB_PASSWORD"),
            "HOST": config("DB_HOST", default="localhost"),
            "PORT": config("DB_PORT"),
        },
    }
    if USE_POSTGRESQL
    else {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR.joinpath("db.sqlite3"),
        }
    }
)

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"
TIME_ZONE = "Asia/Kolkata"
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR.joinpath("static")

# Media files
MEDIA_ROOT = BASE_DIR.joinpath("media")
MEDIA_URL = "/files/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
AUTH_USER_MODEL = "custom_auth.User"


# CACHING
"""
Cache key prefix is used as f"{CACHE_PREFIX}:{version}:<key>"
"""
GENERAL_CACHE_TTL = config("CACHE_TTL", default=60 * 60 * 24, cast=int)
CACHE_KEY_PREFIX = config("CACHE_KEY_PREFIX", default="customizer")
CACHE_VERSION = config("CACHE_VERSION", default="1")
if CACHE_ENABLED:
    CACHES = {
        "default": {
            "BACKEND": "django.core.cache.backends.redis.RedisCache",
            "KEY_PREFIX": CACHE_KEY_PREFIX,
            "LOCATION": "redis://127.0.0.1:6379",
        }
    }
